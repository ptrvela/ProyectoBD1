/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import clases.conexion;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author WELLINGTON
 */
public class consultas extends javax.swing.JFrame {

    //conexion base de datos
    static Connection con= conexion.conexion();
    
    //variable
    static Statement stmt=null;
    public String sex="";
    
    public consultas() {
        initComponents();
        getContentPane().setBackground(new Color(43,61,83));
        limpiar();
        rtodos.setSelected(true);
        fechasis();
        block();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        bbusc = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        rtodos = new javax.swing.JRadioButton();
        rdgenero = new javax.swing.JRadioButton();
        cbogenero = new javax.swing.JComboBox();
        rfnac = new javax.swing.JRadioButton();
        taño = new java.awt.TextField();
        tmes = new javax.swing.JComboBox<>();
        tdia = new java.awt.TextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tcant = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        rpct = new javax.swing.JRadioButton();
        rpac = new javax.swing.JRadioButton();
        rrfc = new javax.swing.JRadioButton();
        tdia1 = new java.awt.TextField();
        tmes1 = new javax.swing.JComboBox<>();
        taño1 = new java.awt.TextField();
        tdia2 = new java.awt.TextField();
        tmes2 = new javax.swing.JComboBox<>();
        taño2 = new java.awt.TextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tpac = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        rpct1 = new javax.swing.JRadioButton();
        rpac1 = new javax.swing.JRadioButton();
        rrfc1 = new javax.swing.JRadioButton();
        tpac1 = new javax.swing.JTextField();
        tmes3 = new javax.swing.JComboBox<>();
        tdia3 = new java.awt.TextField();
        tdia4 = new java.awt.TextField();
        tmes4 = new javax.swing.JComboBox<>();
        taño3 = new java.awt.TextField();
        taño4 = new java.awt.TextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONSULTAS");
        setUndecorated(true);

        bbusc.setBackground(new java.awt.Color(0, 154, 154));
        bbusc.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        bbusc.setForeground(new java.awt.Color(255, 255, 255));
        bbusc.setText("Buscar");
        bbusc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbuscActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(106, 117, 144));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PACIENTES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N

        rtodos.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rtodos);
        rtodos.setForeground(new java.awt.Color(255, 255, 255));
        rtodos.setText("Mostrar Todos");
        rtodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtodosActionPerformed(evt);
            }
        });

        rdgenero.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rdgenero);
        rdgenero.setForeground(new java.awt.Color(255, 255, 255));
        rdgenero.setSelected(true);
        rdgenero.setText("Mostrar Pacientes por Genero:");
        rdgenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdgeneroActionPerformed(evt);
            }
        });

        cbogenero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...", "M", "F" }));

        rfnac.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rfnac);
        rfnac.setForeground(new java.awt.Color(255, 255, 255));
        rfnac.setText("Fecha de Nacimiento");
        rfnac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rfnacActionPerformed(evt);
            }
        });

        taño.setText("año");
        taño.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tañoKeyTyped(evt);
            }
        });

        tmes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre" }));
        tmes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tdia.setText("dia");
        tdia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tdiaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rtodos)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rdgenero)
                        .addGap(18, 18, 18)
                        .addComponent(cbogenero, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rfnac)
                        .addGap(21, 21, 21)
                        .addComponent(tdia, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tmes, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(taño, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rtodos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdgenero)
                    .addComponent(cbogenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tdia, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(taño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(rfnac))
                .addGap(18, 18, 18))
        );

        tabla.setBackground(new java.awt.Color(106, 117, 144));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cantidad de Registros");

        tcant.setEnabled(false);

        jPanel2.setBackground(new java.awt.Color(106, 117, 144));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CITAS AGENDADAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N

        rpct.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rpct);
        rpct.setForeground(new java.awt.Color(255, 255, 255));
        rpct.setText("Mostrar Todas");
        rpct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpctActionPerformed(evt);
            }
        });

        rpac.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rpac);
        rpac.setForeground(new java.awt.Color(255, 255, 255));
        rpac.setText("Por Paciente");
        rpac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpacActionPerformed(evt);
            }
        });

        rrfc.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rrfc);
        rrfc.setForeground(new java.awt.Color(255, 255, 255));
        rrfc.setText("Rango de Fechas");
        rrfc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rrfcActionPerformed(evt);
            }
        });

        tdia1.setText("dia");
        tdia1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tdia1KeyTyped(evt);
            }
        });

        tmes1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre" }));
        tmes1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        taño1.setText("año");
        taño1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taño1KeyTyped(evt);
            }
        });

        tdia2.setText("dia");
        tdia2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tdia2KeyTyped(evt);
            }
        });

        tmes2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre" }));
        tmes2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        taño2.setText("año");
        taño2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taño2KeyTyped(evt);
            }
        });

        jLabel2.setText("1");

        jLabel3.setText("2");

        tpac.setText("jTextField1");
        tpac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpacActionPerformed(evt);
            }
        });
        tpac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpacKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rpct)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rrfc)
                            .addComponent(rpac))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tdia2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tmes2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(taño2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(tdia1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tmes1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(taño1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(tpac))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tdia1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tmes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(rpct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rpac)
                            .addComponent(tpac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rrfc))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(taño1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(tdia2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tmes2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(taño2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(106, 117, 144));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CITA ATENDIDA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N

        rpct1.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rpct1);
        rpct1.setForeground(new java.awt.Color(255, 255, 255));
        rpct1.setText("Mostrar Todas");
        rpct1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpct1ActionPerformed(evt);
            }
        });

        rpac1.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rpac1);
        rpac1.setForeground(new java.awt.Color(255, 255, 255));
        rpac1.setText("Por Paciente");
        rpac1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpac1ActionPerformed(evt);
            }
        });

        rrfc1.setBackground(new java.awt.Color(106, 117, 144));
        grupo.add(rrfc1);
        rrfc1.setForeground(new java.awt.Color(255, 255, 255));
        rrfc1.setText("Rango de Fechas");
        rrfc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rrfc1ActionPerformed(evt);
            }
        });

        tpac1.setText("jTextField1");
        tpac1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpac1KeyTyped(evt);
            }
        });

        tmes3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre" }));
        tmes3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tdia3.setText("dia");
        tdia3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tdia3KeyTyped(evt);
            }
        });

        tdia4.setText("dia");
        tdia4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tdia4KeyTyped(evt);
            }
        });

        tmes4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre" }));
        tmes4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        taño3.setText("año");
        taño3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taño3KeyTyped(evt);
            }
        });

        taño4.setText("año");
        taño4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taño4KeyTyped(evt);
            }
        });

        jLabel4.setText("1");

        jLabel5.setText("2");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rpct1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rrfc1)
                            .addComponent(rpac1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(tdia4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tmes4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(taño3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(tdia3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tmes3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(taño4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4))
                            .addComponent(tpac1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tdia3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tmes3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rpct1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rpac1)
                            .addComponent(tpac1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rrfc1))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(taño4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(tdia4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tmes4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(taño3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(0, 154, 154));
        jButton1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Ingresar Paciente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 154, 154));
        jButton2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Programar Cita");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 154, 154));
        jButton3.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Diagnostico");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(229, 88, 100));
        jButton4.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("CERRAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_Info_90px.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tcant, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(415, 415, 415))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(bbusc, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel6))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bbusc, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tcant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bbuscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbuscActionPerformed
   
        if(rtodos.isSelected()==true){listapac();}
        
        if(rdgenero.isSelected()==true){
            String sexo= cbogenero.getSelectedItem().toString();
            listasex(sexo);
        }
        
        if(rfnac.isSelected()==true){listafnac(taño.getText(),tmes.getSelectedItem().toString(),tdia.getText());}
        
        if(rpct.isSelected()==true){listapcita();}
        
        if(rpac.isSelected()==true){listapcitan();}
        
        if(rrfc.isSelected()==true){listapcitaf();}
        
        if(rpct1.isSelected()==true){listacita();}
        
        if(rpac1.isSelected()==true){listacitan();}
        
        if(rrfc1.isSelected()==true){listacitaf();}
        
    }//GEN-LAST:event_bbuscActionPerformed

    private void rtodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtodosActionPerformed
        limpiar();
        block();
    }//GEN-LAST:event_rtodosActionPerformed

    private void rdgeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdgeneroActionPerformed
        limpiar();
        block();
        
        cbogenero.setEnabled(true);
        
        if(rdgenero.isSelected()==true)
        {
            cbogenero.setSelectedItem(0);
            cbogenero.setEnabled(true);
        }
    }//GEN-LAST:event_rdgeneroActionPerformed

    private void tañoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tañoKeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(taño.getText().length()==4){
            evt.consume();
        }
    }//GEN-LAST:event_tañoKeyTyped

    private void tdiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tdiaKeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(tdia.getText().length()==2){
            evt.consume();
        }
    }//GEN-LAST:event_tdiaKeyTyped

    private void tdia1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tdia1KeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(tdia1.getText().length()==2){
            evt.consume();
        }
    }//GEN-LAST:event_tdia1KeyTyped

    private void taño1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taño1KeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(taño1.getText().length()==4){
            evt.consume();
        }
    }//GEN-LAST:event_taño1KeyTyped

    private void tdia2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tdia2KeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(tdia2.getText().length()==2){
            evt.consume();
        }
    }//GEN-LAST:event_tdia2KeyTyped

    private void taño2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taño2KeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(taño2.getText().length()==4){
            evt.consume();
        }
    }//GEN-LAST:event_taño2KeyTyped

    private void tdia3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tdia3KeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(tdia3.getText().length()==2){
            evt.consume();
        }
    }//GEN-LAST:event_tdia3KeyTyped

    private void tdia4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tdia4KeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(tdia4.getText().length()==2){
            evt.consume();
        }
    }//GEN-LAST:event_tdia4KeyTyped

    private void taño3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taño3KeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(taño3.getText().length()==4){
            evt.consume();
        }
    }//GEN-LAST:event_taño3KeyTyped

    private void taño4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taño4KeyTyped
        char c = evt.getKeyChar();
        if ((c<'0'|| c>'9')) evt.consume();

        if(taño4.getText().length()==4){
            evt.consume();
        }
    }//GEN-LAST:event_taño4KeyTyped

    private void rpctActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpctActionPerformed
        limpiar();
        block();
    }//GEN-LAST:event_rpctActionPerformed

    private void rpct1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpct1ActionPerformed
        limpiar();
        block();
    }//GEN-LAST:event_rpct1ActionPerformed

    private void tpacKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpacKeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<' ' || c>' ') && (c<'ñ' || c>'ñ') && (c<'Ñ' || c>'Ñ')) evt.consume();
    }//GEN-LAST:event_tpacKeyTyped

    private void tpac1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpac1KeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<' ' || c>' ') && (c<'ñ' || c>'ñ') && (c<'Ñ' || c>'Ñ')) evt.consume();
    }//GEN-LAST:event_tpac1KeyTyped

    private void rfnacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rfnacActionPerformed
        block();
        
        tdia.setEditable(true);
        tmes.setEnabled(true);
        taño.setEditable(true);
        
        tdia.requestFocus();
    }//GEN-LAST:event_rfnacActionPerformed

    private void rpacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpacActionPerformed
        limpiar();
        block();
        tpac.setEditable(true);
        tpac.requestFocus();
    }//GEN-LAST:event_rpacActionPerformed

    private void rrfcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rrfcActionPerformed
        limpiar();
        block();
        tdia1.setEditable(true);
        tmes1.setEnabled(true);
        taño1.setEditable(true);
 
        tdia2.setEditable(true);
        tmes2.setEnabled(true);
        taño2.setEditable(true);
        
        tdia1.requestFocus();
    }//GEN-LAST:event_rrfcActionPerformed

    private void rpac1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpac1ActionPerformed
        limpiar();
        block();
        tpac1.setEditable(true);
        tpac1.requestFocus();
    }//GEN-LAST:event_rpac1ActionPerformed

    private void rrfc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rrfc1ActionPerformed
        limpiar();
        block();
        tdia3.setEditable(true);
        tmes3.setEnabled(true);
        taño3.setEditable(true);
    
        tdia4.setEditable(true);
        tmes4.setEnabled(true);
        taño4.setEditable(true);
        
        tdia3.requestFocus();
    
    }//GEN-LAST:event_rrfc1ActionPerformed

    private void tpacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpacActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpacActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        clases.regp.menupadmin();
        dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ipacientes p = new ipacientes();
        p.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        progcita sr = new progcita();
	sr.setVisible(true);
        dispose();
	
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        diagnostico p = new diagnostico();
        p.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(consultas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new consultas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bbusc;
    private javax.swing.JComboBox cbogenero;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdgenero;
    private javax.swing.JRadioButton rfnac;
    private javax.swing.JRadioButton rpac;
    private javax.swing.JRadioButton rpac1;
    private javax.swing.JRadioButton rpct;
    private javax.swing.JRadioButton rpct1;
    private javax.swing.JRadioButton rrfc;
    private javax.swing.JRadioButton rrfc1;
    private javax.swing.JRadioButton rtodos;
    private javax.swing.JTable tabla;
    private java.awt.TextField taño;
    private java.awt.TextField taño1;
    private java.awt.TextField taño2;
    private java.awt.TextField taño3;
    private java.awt.TextField taño4;
    private javax.swing.JTextField tcant;
    private java.awt.TextField tdia;
    private java.awt.TextField tdia1;
    private java.awt.TextField tdia2;
    private java.awt.TextField tdia3;
    private java.awt.TextField tdia4;
    private javax.swing.JComboBox<String> tmes;
    private javax.swing.JComboBox<String> tmes1;
    private javax.swing.JComboBox<String> tmes2;
    private javax.swing.JComboBox<String> tmes3;
    private javax.swing.JComboBox<String> tmes4;
    private javax.swing.JTextField tpac;
    private javax.swing.JTextField tpac1;
    // End of variables declaration//GEN-END:variables


void listapac(){
        DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"CODIGO","NOMBRE","DPI","TELEFONO","SEXO","FECHA DE NACIMIENTO"};
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        try {
            
            String ConsultaSQL="SELECT * FROM paciente";
        
            String []registros= new String[6];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("id");
                registros[1]=rs.getString("nombre");
                registros[2]=rs.getString("dpi");  
                registros[3]=rs.getString("telefono");
                registros[4]=rs.getString("sexo");
                registros[5]=rs.getString("fechanacimiento");
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

void listasex(String sexo){
        DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"CODIGO","NOMBRE","DPI","TELEFONO","SEXO","FECHA DE NACIMIENTO"};
        String sx=sexo;
        
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        
        try {
            
            String ConsultaSQL="SELECT * FROM paciente WHERE sexo = '"+sx+"'";
        
            String []registros= new String[6];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("id");
                registros[1]=rs.getString("nombre");
                registros[2]=rs.getString("dpi");  
                registros[3]=rs.getString("telefono");
                registros[4]=rs.getString("sexo");
                registros[5]=rs.getString("fechanacimiento");
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

void listafnac(String año,String mes,String dia){
        DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"CODIGO","NOMBRE","DPI","TELEFONO","SEXO","FECHA DE NACIMIENTO"};
        String fn=clases.convertirfecha.fechaconv(dia, mes, año);
        
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        
        try {
            
            String ConsultaSQL="SELECT * FROM paciente WHERE fechanacimiento = '"+fn+"'";
        
            String []registros= new String[6];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("id");
                registros[1]=rs.getString("nombre");
                registros[2]=rs.getString("dpi");  
                registros[3]=rs.getString("telefono");
                registros[4]=rs.getString("sexo");
                registros[5]=rs.getString("fechanacimiento");
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }



void listapcita(){
        DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"NOMBRE","FECHA","MOTIVO"};
        
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        
        try {
            
            String ConsultaSQL="SELECT paciente.nombre, proximacita.fecha, proximacita.motivo "
                             + " FROM paciente"
                             + " INNER JOIN proximacita"
                             + " ON paciente.id=proximacita.paciente_id";
        
            String []registros= new String[3];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("paciente.nombre");
                registros[1]=rs.getString("proximacita.fecha");
                registros[2]=rs.getString("proximacita.motivo");  
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

void listapcitan(){
    int idpacie=idpaci();
    
    DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"NOMBRE","FECHA","MOTIVO"};
        
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        
        try {
            
            String ConsultaSQL="SELECT paciente.nombre, proximacita.fecha, proximacita.motivo "
                             + " FROM proximacita"
                             + " INNER JOIN paciente"
                             + " ON proximacita.paciente_id=paciente.id"
                             + " where paciente.id="+idpacie;
        
            String []registros= new String[3];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("paciente.nombre");
                registros[1]=rs.getString("proximacita.fecha");
                registros[2]=rs.getString("proximacita.motivo");  
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

}

void listapcitaf(){
    String f1=clases.convertirfecha.fechaconv(tdia1.getText(),tmes1.getSelectedItem().toString(),taño1.getText()), 
           f2=clases.convertirfecha.fechaconv(tdia2.getText(),tmes2.getSelectedItem().toString(),taño2.getText());
    
    
    DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"NOMBRE","FECHA","MOTIVO"};
        
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        
        try {
            
            String ConsultaSQL="SELECT paciente.nombre, proximacita.fecha, proximacita.motivo "
                             + " FROM paciente"
                             + " INNER JOIN proximacita"
                             + " ON paciente.id=proximacita.paciente_id"
                             + " WHERE fecha BETWEEN "+f1+" AND "+f2;
        
            String []registros= new String[3];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("paciente.nombre");
                registros[1]=rs.getString("proximacita.fecha");
                registros[2]=rs.getString("proximacita.motivo");  
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

}



void listacita(){
        DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"NOMBRE","FECHA","MOTIVO"};
        
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        
        try {
            
            String ConsultaSQL="SELECT paciente.nombre, cita.fecha, cita.motivo "
                             + " FROM paciente"
                             + " INNER JOIN cita"
                             + " ON paciente.id=cita.paciente_id";
        
            String []registros= new String[3];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("paciente.nombre");
                registros[1]=rs.getString("cita.fecha");
                registros[2]=rs.getString("cita.motivo");  
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

void listacitan(){
    int idpacie=idpaci1();
    
    DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"NOMBRE","FECHA","MOTIVO"};
        
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        
        try {
            
            String ConsultaSQL="SELECT paciente.nombre, cita.fecha, cita.motivo "
                             + " FROM cita"
                             + " INNER JOIN paciente"
                             + " ON cita.paciente_id=paciente.id"
                             + " where paciente.id="+idpacie;
        
            String []registros= new String[3];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("paciente.nombre");
                registros[1]=rs.getString("cita.fecha");
                registros[2]=rs.getString("cita.motivo");  
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

}

void listacitaf(){
    String f1=clases.convertirfecha.fechaconv(tdia3.getText(),tmes3.getSelectedItem().toString(),taño3.getText()), 
           f2=clases.convertirfecha.fechaconv(tdia4.getText(),tmes4.getSelectedItem().toString(),taño4.getText());
    
    
    DefaultTableModel modelo= new DefaultTableModel();
        String []Titulos = {"NOMBRE","FECHA","MOTIVO"};
        
        modelo.setColumnIdentifiers(Titulos);
        this.tabla.setModel(modelo);
        
        try {
            
            String ConsultaSQL="SELECT paciente.nombre, cita.fecha, cita.motivo "
                             + " FROM paciente"
                             + " INNER JOIN cita"
                             + " ON paciente.id=cita.paciente_id"
                             + " WHERE fecha BETWEEN "+f1+" AND "+f2;
        
            String []registros= new String[3];
           
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(ConsultaSQL);
            while(rs.next())
            {
                registros[0]=rs.getString("paciente.nombre");
                registros[1]=rs.getString("cita.fecha");
                registros[2]=rs.getString("cita.motivo");  
                
                modelo.addRow(registros);
                                
            }
            tabla.setModel(modelo);
            tcant.setText(""+tabla.getRowCount());
        } catch (SQLException ex) {
            Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }

}



private int idpaci(){
    int idpac=0;
    
    if(((tpac.getText().equals("")))){
                
    javax.swing.JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE ESTA VACIO \n","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
    //coloca el cursor en el campo en blanco
    if(tpac.getText().equals("")){tpac.requestFocus();}
    }else{
        try {
            String nomb=tpac.getText();
           
            stmt=con.createStatement();
            String ConsultaPac="SELECT id FROM paciente WHERE nombre='"+nomb+"'";
                
//            idpac=0;
                
            ResultSet rs=stmt.executeQuery(ConsultaPac);
                
            while(rs.next()){
                idpac=rs.getInt("id");
            }
        }catch (SQLException ex) {
                Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }

    return idpac;
}

private int idpaci1(){
    int idpac=0;
    
    if(((tpac1.getText().equals("")))){
                
    javax.swing.JOptionPane.showMessageDialog(this,"EL CAMPO NOMBRE ESTA VACIO \n","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
    //coloca el cursor en el campo en blanco
    if(tpac1.getText().equals("")){tpac1.requestFocus();}
    }else{
        try {
            String nomb=tpac1.getText();
           
            stmt=con.createStatement();
            String ConsultaPac="SELECT * FROM paciente WHERE nombre='"+nomb+"'";
                
            idpac=0;
                
            ResultSet rs=stmt.executeQuery(ConsultaPac);
                
            while(rs.next()){
                idpac=rs.getInt("id");
            }
        }catch (SQLException ex) {
                Logger.getLogger(consultas.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }

    return idpac;
}



public void fechasis(){
        int m=0;
        java.util.Date fecha = new Date();
        m= fecha.getMonth();
        tmes.setSelectedIndex(m);
        tmes1.setSelectedIndex(m);
        tmes2.setSelectedIndex(m);
        tmes3.setSelectedIndex(m);
        tmes4.setSelectedIndex(m);
    }



public void limpiar(){

    tdia.setText("");
    taño.setText("");
    
    tdia1.setText("");
    taño1.setText("");
    
    tdia2.setText("");
    taño2.setText("");
    
    tdia3.setText("");
    taño3.setText("");
    
    tdia4.setText("");
    taño4.setText("");
    
    tpac.setText("");
    tpac1.setText("");

}



public void block(){

    cbogenero.setEnabled(false);
    
    tdia.setEditable(false);
    tmes.setEnabled(false);
    taño.setEditable(false);
    
    tdia1.setEditable(false);
    tmes1.setEnabled(false);
    taño1.setEditable(false);
    
    tdia2.setEditable(false);
    tmes2.setEnabled(false);
    taño2.setEditable(false);
    
    tdia3.setEditable(false);
    tmes3.setEnabled(false);
    taño3.setEditable(false);
    
    tdia4.setEditable(false);
    tmes4.setEnabled(false);
    taño4.setEditable(false);
    
    tpac.setEditable(false);
    tpac1.setEditable(false);
    
}       


}
