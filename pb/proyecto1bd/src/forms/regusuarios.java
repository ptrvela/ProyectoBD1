/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import clases.conexion;
import clases.codificar;
import java.awt.Color;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author WELLINGTON
 */
public class regusuarios extends javax.swing.JFrame {
    
    //conexion base de datos
    static Connection con= conexion.conexion();
    
    //variable
    static Statement stmt=null;
    
      
    public regusuarios() {
        initComponents();
        getContentPane().setBackground(new Color(43,61,83));
        limpiar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        tnom = new java.awt.TextField();
        tus = new java.awt.TextField();
        tipus = new javax.swing.JComboBox<>();
        btacept = new javax.swing.JButton();
        tpass = new javax.swing.JPasswordField();
        bcerrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("REGISTRO DE USUARIOS");
        setUndecorated(true);

        label1.setBackground(new java.awt.Color(43, 61, 83));
        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setText("Nombre");

        label2.setBackground(new java.awt.Color(43, 61, 83));
        label2.setForeground(new java.awt.Color(255, 255, 255));
        label2.setText("Usuario");

        label3.setBackground(new java.awt.Color(43, 61, 83));
        label3.setForeground(new java.awt.Color(255, 255, 255));
        label3.setText("Tipo de Usuario");

        label4.setBackground(new java.awt.Color(43, 61, 83));
        label4.setForeground(new java.awt.Color(255, 255, 255));
        label4.setText("Contrase√±a");

        tnom.setName("tnombre"); // NOI18N
        tnom.setText("textField1");
        tnom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tnomKeyTyped(evt);
            }
        });

        tus.setName("tusuario"); // NOI18N
        tus.setText("textField2");
        tus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tusKeyTyped(evt);
            }
        });

        tipus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Invitado", "Administrador" }));
        tipus.setName("tipous"); // NOI18N

        btacept.setBackground(new java.awt.Color(0, 154, 154));
        btacept.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        btacept.setForeground(new java.awt.Color(255, 255, 255));
        btacept.setText("ACEPTAR");
        btacept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btaceptActionPerformed(evt);
            }
        });

        tpass.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tpass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpassKeyTyped(evt);
            }
        });

        bcerrar.setBackground(new java.awt.Color(229, 88, 100));
        bcerrar.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        bcerrar.setForeground(new java.awt.Color(255, 255, 255));
        bcerrar.setText("Cerrar");
        bcerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcerrarActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_Registration_90px.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tpass)
                            .addComponent(tnom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tipus, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(133, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btacept, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addComponent(bcerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tnom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tipus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tpass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(btacept, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bcerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    //Validacion de campos de nombre
    //solo permite ingresar letras mayusculas, minusculas y espacio
    private void tnomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tnomKeyTyped
        
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<' ' || c>' ') && (c<'√±' || c>'√±') && (c<'√ë' || c>'√ë')) evt.consume();
        
    }//GEN-LAST:event_tnomKeyTyped

    //boton de ingreso
    private void btaceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btaceptActionPerformed
        
        try {
            String nombre="", us="", tipo="", pass="";
            
            //se obtiene el contenido de cada texbox
            //guardanlo en una variable para cada campo
            nombre = tnom.getText();
            us = tus.getText();
            tipo= tipus.getSelectedItem().toString();
            
            //se cifra la contrase√±a antes de ser guardada en una variable
            //y pasar a ser almacenada
            pass = codificar.sha1(tpass.getText());
            
            //validacion de los campos los cuales no pueden quedar en blanco
            if((tnom.getText().equals("")) || (tus.getText().equals("")) || (tpass.getText().equals(""))){
                
                javax.swing.JOptionPane.showMessageDialog(this,"Debe llenar todos los campos \n","AVISO!",javax.swing.JOptionPane.INFORMATION_MESSAGE);
                
                //coloca el cursor en el campo en blanco
                if(tpass.getText().equals("")){tpass.requestFocus();}
                if(tus.getText().equals("")){tus.requestFocus();}
                if(tnom.getText().equals("")){tnom.requestFocus();}
              
            }
            else{
                //si los campos estan llenos 
                //se procede a almacenar los datos ingresados
                stmt=con.createStatement();
                stmt.executeUpdate("insert into usuario values('"+0+"','"+nombre+"','"+us+"','"+tipo+"','"+pass+"')");
                
                JOptionPane.showMessageDialog(null, "USUARIO REGISTRADO");
                //se limpian los campos para su posterior uso
                limpiar();
            }
            
        } catch (SQLException | NoSuchAlgorithmException ex) {
            Logger.getLogger(regusuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btaceptActionPerformed
    
    //Validacion de campos de usuario
    //solo permite ingresar letras mayusculas, minusculas
    private void tusKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tusKeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<'0' || c>'9')) evt.consume();
    }//GEN-LAST:event_tusKeyTyped

    //Validacion de campos de contrase√±a
    //solo permite ingresar letras mayusculas, minusculas
    private void tpassKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpassKeyTyped
        char c = evt.getKeyChar();
        if ((c<'a'|| c>'z') && (c<'A'||c>'Z') && (c<'0' || c>'9')) evt.consume();
    }//GEN-LAST:event_tpassKeyTyped

    private void bcerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcerrarActionPerformed
        clases.regp.menupadmin();
        dispose();
    }//GEN-LAST:event_bcerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(regusuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(regusuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(regusuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(regusuarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new regusuarios().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bcerrar;
    private javax.swing.JButton btacept;
    private javax.swing.JLabel jLabel1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private javax.swing.JComboBox<String> tipus;
    private java.awt.TextField tnom;
    private javax.swing.JPasswordField tpass;
    private java.awt.TextField tus;
    // End of variables declaration//GEN-END:variables


    public void limpiar(){
        
        
        tnom.setText("");
        tus.setText("");
        tipus.setSelectedItem(0);
        tpass.setText("");
        
        tnom.requestFocus();
        
    }

}
    
